(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/classes/learning_nodes/questions_inputs"],{

/***/ "./resources/js/classes/learning_nodes/questions_inputs.js":
/*!*****************************************************************!*\
  !*** ./resources/js/classes/learning_nodes/questions_inputs.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/// [ SETUP SECTION ]
// Check for update buttons
btns_update = document.querySelectorAll(".update");
btns_update.forEach(function (element) {
  element.addEventListener("click", checkQuestions);
}); // Add events on change to inputs

inputs = document.querySelectorAll(".form-check-input");
inputs.forEach(function (element) {
  element.addEventListener("click", checkQuestions);
}); // Set event for limit answer number

var answer_limit_questions = document.querySelectorAll(".question[data-answer-limit]");
answer_limit_questions.forEach(function (answer_limit_question) {
  var limit = answer_limit_question.getAttribute("data-answer-limit");
  var question_id = "#" + answer_limit_question.id;

  if (!limit) {
    return;
  }

  var checkboxes = answer_limit_question.querySelectorAll("input[type='checkbox']");
  checkboxes.forEach(function (checkbox) {
    $(checkbox).on("change", function (event) {
      var checked = document.querySelectorAll(question_id + " input[type='checkbox']:checked");

      if (checked.length > limit) {
        this.checked = false;
      }
    });
  });
}); /// [ FUNCTIONS SECTION ]

function toggleSubmits(value) {
  btns_submits = document.querySelectorAll(".submit");
  btns_submits.forEach(function (element) {
    element.disabled = value;
  });
}

function checkQuestions() {
  // Look for all questions
  questions = document.querySelectorAll(".required"); // Look for all questions inputs

  var all_answered = true;
  questions.forEach(function (element) {
    var question_type = element.getAttribute("data-type");

    switch (question_type) {
      default:
        if (!checkQuestionInputs(element)) {
          all_answered = false;
        }

        break;

      case "relate":
        if (!checkRelateQuestion(element)) {
          all_answered = false;
        }

        break;

      case "true_false":
        if (!checkBooleanQuestion(element)) {
          all_answered = false;
        }

        break;
    }
  }); // Change submit state

  toggleSubmits(!all_answered);
}

function checkQuestionInputs(question) {
  var inputs = question.querySelectorAll("input");
  var atLeastOne = false;
  inputs.forEach(function (element) {
    if (element.checked) {
      atLeastOne = true;
      return;
    }
  });
  return atLeastOne;
}

function checkRelateQuestion(relate_question) {
  // Get selects
  var answered = true;
  var selects = relate_question.querySelectorAll("select"); // Check if all selects have an answer

  selects.forEach(function (select) {
    var value = parseInt(select.value);

    if (isNaN(value)) {
      answered = false;
      return;
    }
  });
  return answered;
}

function checkBooleanQuestion(boolean_question) {
  // Get boolean rows
  var answered = true;
  var boolean_rows = boolean_question.querySelectorAll(".boolean-row");
  boolean_rows.forEach(function (boolean_row) {
    var radios = boolean_row.querySelectorAll("input[type='radio']:checked");

    if (radios.length <= 0) {
      answered = false;
      return;
    }
  });
  return answered;
}

/***/ }),

/***/ 72:
/*!***********************************************************************!*\
  !*** multi ./resources/js/classes/learning_nodes/questions_inputs.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/futureed/html/huawei_code/resources/js/classes/learning_nodes/questions_inputs.js */"./resources/js/classes/learning_nodes/questions_inputs.js");


/***/ })

},[[72,"/js/manifest"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,